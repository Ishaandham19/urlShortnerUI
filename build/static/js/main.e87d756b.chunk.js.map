{"version":3,"sources":["services/auth.service.js","components/Login.js","components/Register.js","services/auth-header.js","services/user.service.js","components/UrlEntry.js","components/UserData.js","components/HomeMessage.js","components/Home.js","components/Footer.js","common/EventBus.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","AuthService","register","UserName","Email","Password","axios","post","login","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","getCurrentUser","parse","getItem","required","value","className","role","Login","navigate","useNavigate","form","useRef","checkBtn","useState","username","setUsername","password","setPassword","loading","setLoading","message","setMessage","onSubmit","e","preventDefault","current","validateAll","context","_errors","length","window","location","reload","error","resMessage","toString","ref","htmlFor","type","name","onChange","target","validations","disabled","style","display","validEmail","isEmail","vusername","vpassword","Register","email","setEmail","successful","setSuccessful","authHeader","user","UserService","createUrl","Url","Alias","createUrlConfig","headers","createUrlData","getUserUrls","get","UrlEntry","alias","shortUrl","url","substring","onClick","navigator","clipboard","writeText","UserData","update","urls","setUrls","useEffect","res","catch","console","log","id","map","urlInfo","ShortUrl","HomeMessage","validUrl","RegExp","test","validAlias","Home","setUser","setUrl","setAlias","updateUserUrls","setUpdateUserUrls","placeholder","class","Footer","href","size","eventBus","on","event","callback","document","addEventListener","detail","dispatch","dispatchEvent","CustomEvent","remove","removeEventListener","App","undefined","currentUser","setCurrentUser","EventBus","logOut","to","path","element","Boolean","hostname","match","ReactDOM","render","basename","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e87d756b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"shorturl.ishaandham.com/\"\n\nconst register = (UserName, Email, Password) => {\n  return axios.post(API_URL + \"register\", {\n    UserName,\n    Email,\n    Password,\n  });\n};\n\nconst login = (UserName, Password) => {\n  return axios\n    .post(API_URL + \"login\", {\n      UserName,\n      Password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nconst AuthService = {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n};\n\nexport default AuthService;\n","import React, { useState, useRef } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst Login = () => {\n  let navigate = useNavigate();\n\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(username, password).then(\n        () => {\n          navigate(\"/\");\n          window.location.reload();\n        },\n        (error) => {\n          const resMessage =\n            (error.response && error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setLoading(false);\n          setMessage(resMessage);\n        }\n      );\n    } else {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"col-md-12 center-div\">\n      <div className=\"login-register-container card card-container\">\n        <Form onSubmit={handleLogin} ref={form}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <Input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"username\"\n              value={username}\n              onChange={onChangeUsername}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <Input\n              type=\"password\"\n              className=\"form-control\"\n              name=\"password\"\n              value={password}\n              onChange={onChangePassword}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\n              {loading && (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              )}\n              <span>Login</span>\n            </button>\n          </div>\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst validEmail = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nconst Register = () => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangeEmail = (e) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setSuccessful(false);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.register(username, email, password).then(\n        (response) => {\n          setMessage(response.data.message);\n          setSuccessful(true);\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setMessage(resMessage);\n          setSuccessful(false);\n        }\n      );\n    }\n  };\n\n  return (\n    <div className=\"col-md-12 center-div\">\n      <div className=\"login-register-container card card-container\">\n        \n        <Form onSubmit={handleRegister} ref={form}>\n          {!successful && (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={username}\n                  onChange={onChangeUsername}\n                  validations={[required, vusername]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChangeEmail}\n                  validations={[required, validEmail]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChangePassword}\n                  validations={[required, vpassword]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\n              </div>\n            </div>\n          )}\n\n          {message && (\n            <div className=\"form-group\">\n              <div\n                className={\n                  successful ? \"alert alert-success\" : \"alert alert-danger\"\n                }\n                role=\"alert\"\n              >\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    // return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\n    return { 'x-access-token': user.accessToken }; \n  } else {\n    return {};\n  }\n}","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"shorturl.ishaandham.com/auth/\";\n\nconst createUrl = (Url, Alias) => {\n  let createUrlConfig = {\n    headers: authHeader()\n  }\n  \n  let createUrlData = {\n      \"Url\" : Url,\n      \"Alias\" : Alias\n  }\n  return axios.post(API_URL + \"url\", createUrlData, createUrlConfig)\n};\n\nconst getUserUrls = () => {\n  let createUrlConfig = {\n    headers: authHeader()\n  }\n  \n  return axios.get(API_URL + \"url\", { headers: authHeader()});\n};\n\nconst UserService = {\n  createUrl,\n  getUserUrls\n};\n\nexport default UserService;\n","const UrlEntry = ({alias, shortUrl, url}) => {\n    const urlLen = 45\n    const shortUrlLen = 30\n\n    if (shortUrl.length > shortUrlLen) {\n        shortUrl = shortUrl.substring(0, shortUrlLen) + \" . . .\" \n    }\n    if (url.length > urlLen) {\n        url = url.substring(0, urlLen) + \" . . .\" \n    }\n    const copyToClipboard = () => {\n        navigator.clipboard.writeText(shortUrl)\n    }\n\n    return (\n        <li className=\"list-group-item\">\n            <i className=\"fa fa-copy\" onClick={copyToClipboard}></i>\n            <span className=\"shorturl\">{shortUrl}</span> <br/>\n            <span className=\"url\">{url}</span> \n        </li>\n    );\n}\n\nexport default UrlEntry;","import { useState, useEffect } from \"react\"\nimport UserService from \"../services/user.service\";\nimport UrlEntry from \"./UrlEntry\";\n\nconst UserData = ({update}) => {\n    const [urls, setUrls] = useState([])\n\n    useEffect(() => {\n        UserService.getUserUrls()\n        .then((res) =>\n            setUrls(res.data)\n        )\n        .catch(\n            (error) => {\n                console.log(error)\n            }\n        )\n    }, [update]);\n\n    if (urls) {\n        return (\n            <div className=\"panel panel-primary\" id=\"result_panel\">\n                <div className=\"panel-body\">\n                    <ul className=\"list-group\">\n                    {urls.map((urlInfo) => {\n                    return (\n                        <UrlEntry alias={urlInfo.Alias} shortUrl={urlInfo.ShortUrl} url={urlInfo.Url}></UrlEntry>\n                    )\n                })}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n    else {\n        return (\n            <></>\n        )\n    }\n}\n\nexport default UserData;\n","const HomeMessage = () => {\n    return (\n        <>\n            <div id=\"welcome-msg\" className=\"center-div gradient-text\">\n                <h1>Welcome! Create your custom short urls</h1>\n            </div>\n            <div className=\"center-div gradient-text\">\n                <h3>Login to start!</h3>\n            </div>\n        </>\n    )\n}\n\nexport default HomeMessage;","import React, { useState, useEffect, useRef} from \"react\";\n\nimport UserService from \"../services/user.service\";\nimport AuthService from \"../services/auth.service\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport UserData from \"./UserData\";\nimport HomeMessage from \"./HomeMessage\"\n\nconst validUrl = (url) => {\n  // https://gist.github.com/dperini/729294\n  const URLRegex = RegExp(\n    \"^\" +\n      // protocol identifier (optional)\n      // short syntax // still required\n      \"(?:(?:(?:https?|ftp):)?\\\\/\\\\/)\" +\n      // user:pass BasicAuth (optional)\n      \"(?:\\\\S+(?::\\\\S*)?@)?\" +\n      \"(?:\" +\n        // IP address dotted notation octets\n        // excludes loopback network 0.0.0.0\n        // excludes reserved space >= 224.0.0.0\n        // excludes network & broadcast addresses\n        // (first & last IP address of each class)\n        \"(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])\" +\n        \"(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}\" +\n        \"(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))\" +\n      \"|\" +\n        // host & domain names, may end with dot\n        // can be replaced by a shortest alternative\n        // (?![-_])(?:[-\\\\w\\\\u00a1-\\\\uffff]{0,63}[^-_]\\\\.)+\n        \"(?:\" +\n          \"(?:\" +\n            \"[a-z0-9\\\\u00a1-\\\\uffff]\" +\n            \"[a-z0-9\\\\u00a1-\\\\uffff_-]{0,62}\" +\n          \")?\" +\n          \"[a-z0-9\\\\u00a1-\\\\uffff]\\\\.\" +\n        \")+\" +\n        // TLD identifier name, may end with dot\n        \"(?:[a-z\\\\u00a1-\\\\uffff]{2,}\\\\.?)\" +\n      \")\" +\n      // port number (optional)\n      \"(?::\\\\d{2,5})?\" +\n      // resource path (optional)\n      \"(?:[/?#]\\\\S*)?\" +\n    \"$\"\n  );\n\n  if (!URLRegex.test(url)) {\n    return (\n      <div className=\"alert\" role=\"alert\">\n        Not a valid url\n      </div>\n    );\n  }\n}\n\nconst validAlias = (alias) => {\n  const aliasRegex = RegExp(\"^[A-Za-z0-9_]+$\")\n  if (!aliasRegex.test(alias) && alias.length < 50) {\n    return (\n      <div className=\"alert\" role=\"alert\">\n        Alias must only contain alphabets, numbers and underscores\n      </div>\n    );\n  }\n}\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst Home = () => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [user, setUser] = useState(null)\n  const [url, setUrl] = useState(\"\");\n  const [alias, setAlias] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [updateUserUrls, setUpdateUserUrls] = useState(false)\n\n  useEffect(() => {\n    setUser(AuthService.getCurrentUser())\n  }, []);\n\n  const onChangeUrl = (e) => {\n    const url = e.target.value;\n    setUrl(url);\n  };\n\n  const onChangeAlias = (e) => {\n    const alias = e.target.value;\n    setAlias(alias);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      UserService.createUrl(url, alias).then(\n        (res) => {\n          setLoading(false);\n          navigator.clipboard.writeText(res.data.shortUrl)\n          setMessage(\"Copied short url to clipboard!\")\n          setUpdateUserUrls(!updateUserUrls)\n        },\n        (error) => {\n          const resMessage = (error.response && error.response.message)\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setLoading(false);\n          setMessage(resMessage);\n        }\n      );\n    } else {\n      setLoading(false);\n    }\n  };\n\n  if (user) {\n  return (\n    <div id=\"home-container\" className=\"container-fluid\">\n    <div className=\"row\">\n        <div id=\"form-container\" className=\"col-8\">\n          <div className=\"card-container\">\n\n            <Form onSubmit={handleLogin} ref={form}>\n              <div className=\"form-group\">\n                <Input\n                  type=\"text\"\n                  placeholder=\"Enter a url\"\n                  className=\"form-control\"\n                  name=\"url\"\n                  value={url}\n                  onChange={onChangeUrl}\n                  validations={[required, validUrl]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <Input\n                  type=\"text\"\n                  placeholder=\"Custom Alias\"\n                  className=\"form-control\"\n                  name=\"alias\"\n                  value={alias}\n                  onChange={onChangeAlias}\n                  validations={[required, validAlias]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button className=\"btn btn-primary btn-block\" disabled={loading}>\n                  {loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                  )}\n                  <span class=\"gradient-text\">Shorten</span>\n                </button>\n              </div>\n\n              {message && (\n                <div className=\"form-group\">\n                  <div className=\"alert alert-dark\" role=\"alert\">\n                    {message}\n                  </div>\n                </div>\n              )}\n              <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n            </Form>\n          </div>\n        </div>\n      <div className=\"col\">\n        <UserData update={updateUserUrls}></UserData>\n      </div>\n    </div>\n   </div>\n  )}\n  else {\n    return (\n      <HomeMessage />\n    )\n  }};\n\nexport default Home;\n","const Footer = () => {\n    return (\n        <footer className=\"text-center\">\n            <a href=\"https://github.com/Ishaandham19/urlShortner\"><i className=\"fa fa-github\" style={{size: 50}}></i> code\n            </a>\n      </footer>\n    )\n}\n\nexport default Footer;","const eventBus = {\n  on(event, callback) {\n    document.addEventListener(event, (e) => callback(e.detail));\n  },\n  dispatch(event, data) {\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\n  },\n  remove(event, callback) {\n    document.removeEventListener(event, callback);\n  },\n};\n\nexport default eventBus;\n","import React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Link, useNavigate} from \"react-router-dom\";\n\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport Footer from \"./components/Footer\";\n\nimport EventBus from \"./common/EventBus\";\n\nconst App = () => {\n  const [currentUser, setCurrentUser] = useState(undefined);\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      setCurrentUser(user);\n    }\n\n    EventBus.on(\"logout\", () => {\n      logOut();\n    });\n\n    return () => {\n      EventBus.remove(\"logout\");\n    };\n  }, []);\n\n  const logOut = () => {\n    AuthService.logout();\n    navigate(\"/\");\n    window.location.reload();\n  };\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <Link to={\"/\"} className=\"navbar-brand\">\n          ShortURL\n        </Link>\n\n        {currentUser ? (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                Logout\n              </a>\n            </li>\n          </div>\n        ) : (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/login\"} className=\"nav-link\">\n                Login\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to={\"/register\"} className=\"nav-link\">\n                Sign Up\n              </Link>\n            </li>\n          </div>\n        )}\n      </nav>\n\n      <div className=\"container-fluid\">\n        <Routes>\n          <Route path=\"/\" element={<Home/>} />\n          <Route path=\"/login\" element={<Login/>} />\n          <Route path=\"/register\" element={<Register/>} />\n        </Routes>\n      </div>\n      <Footer></Footer>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/app\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}